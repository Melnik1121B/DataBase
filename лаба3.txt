--Агрерация данных о кол-во заказов по каждой культуре
CREATE OR REPLACE PROCEDURE AggregateOrders() --создание новой процедуры
LANGUAGE plpgsql --определение языка процедуры как pl/pgSQL
AS $$
DECLARE --объявление переменной как запись. В этой переменной хранятся результаты запроса
    order_rec RECORD;
BEGIN -- обозначение блока кода процедуры
    FOR order_rec IN SELECT crop_id, COUNT(*) AS num_orders FROM Orders GROUP BY crop_id LOOP --цикл в котором будем проходиться по результатам запроса. Здесь выполняется запрос, который агрегирует данные о заказах по каждой культуре.
        RAISE NOTICE 'Культура с ID % имеет % заказов', order_rec.crop_id, order_rec.num_orders; --строка выводит уведомление, используя значение crop_id и num_orders полученные из переменной order_rec
    END LOOP; --конец цикла
END; --конец тела процедуры
$$;

Данный код представляет собой процедуру на языке PL/pgSQL, которая агрегирует данные о количестве заказов по каждой культуре из таблицы Orders и выводит результаты в виде уведомлений (RAISE NOTICE).
Таким образом, данная процедура агрегирует данные о количестве заказов по каждой культуре из таблицы Orders и выводит результаты в виде уведомлений.
------------------------------

--Процедура для вставки нового заказа в таблицу Order
CREATE OR REPLACE PROCEDURE InsertOrder(p_order_date DATE, p_order_amount INT, p_crop_id INT) --Создание новой процедуры, принимающая три параметра
LANGUAGE plpgsql --Определение языка процедуры pl/pgSQL
AS $$ --начало тела процедуры
BEGIN --начало блока кода процедуры
    INSERT INTO Orders (order_date, order_amount, crop_id) VALUES (p_order_date, p_order_amount, p_crop_id); --выполнение операции вставки новой записи в таблицу Orders
    RAISE NOTICE 'Новый заказ успешно добавлен!'; --вывод уведомления о том, что заказ добавлен в таблицу
EXCEPTION --этот блок начинает обработку исключительных ситуаций
    WHEN others THEN --этот блок указывает, что обработчик искл. ситуации должен сработать для всех исключений, не перехваченных предыдущими блоками
        RAISE EXCEPTION 'Ошибка при вставке заказа: %', SQLERRM; --оператор выводит сообщение об ошибке с инфор. о причине ошибки, полученной из системной переменной SQLERRM
END;
$$;

Данный код представляет собой процедуру на языке PL/pgSQL для вставки нового заказа в таблицу Orders. Вот объяснение кода:
Таким образом, данная процедура вставляет новый заказ в таблицу Orders с использованием переданных параметров, а также выводит уведомление о успешной вставке. В случае возникновения ошибки при вставке заказа, процедура выдает сообщение об ошибке.
---------------------------------

--Получение общего количества заказов
CREATE OR REPLACE FUNCTION GetTotalOrdersByCrop(p_crop_id INT) --Создание новой функции
RETURNS INT --Это означает, что функция возвращает целое число
LANGUAGE plpgsql --Определяет язык функции как PL/pgSQL
AS $$ --начало тела функции
DECLARE --Эта строка объявляет переменную total_orders как целое число, которое будет хранить общее количество заказов.
    total_orders INT;
BEGIN --Начало блока кода функции
    SELECT COUNT(*) INTO total_orders FROM Orders WHERE crop_id = p_crop_id; --Этот запрос подсчитывает количество записей в таблице Orders, где crop_id равен переданному параметру p_crop_id, и сохраняет результат в переменную total_order
    RETURN total_orders; --Этот оператор возвращает значение переменной total_orders в качестве результата выполнения функции.
EXCEPTION --Начало блока для обработки исключительных ситуаций
    WHEN others THEN --Этот блок указывает, что обработчик исключительной ситуации должен сработать для всех исключений, не перехваченных предыдущими блоками.
        RAISE EXCEPTION 'Ошибка при получении общего количества заказов: %', SQLERRM; --Этот оператор выводит сообщение об ошибке с информацией о причине ошибки
END;
$$;

Этот код создает функцию на языке PL/pgSQL для получения общего количества заказов по заданной культуре (p_crop_id).
Таким образом, данная функция возвращает общее количество заказов по заданной культуре, и в случае возникновения ошибки выдает сообщение об ошибке.
------------------------------------------


--получения списка заказов по заданной культуре p_crop_id
CREATE OR REPLACE FUNCTION GetOrdersByCrop(p_crop_id INT) --создает новую функцию
RETURNS TABLE (
    order_id INT,
    order_date DATE,
    order_amount INT
) --Это определяет, что функция будет возвращать таблицу с тремя столбцами 
LANGUAGE plpgsql --Определяет язык функции как PL/pgSQL.
AS $$ --Обозначает начало тела функции
BEGIN --Начало блока кода функции
    RETURN QUERY SELECT order_id, order_date, order_amount FROM Orders WHERE crop_id = p_crop_id; --тот оператор выполняет запрос, который выбирает все заказы из таблицы Orders, где crop_id равен переданному параметру p_crop_id, и возвращает результат.
EXCEPTION --Начало блока для обработки исключительных ситуаций
    WHEN others THEN --Этот блок указывает, что обработчик исключительной ситуации должен сработать для всех исключений, не перехваченных предыдущими блоками
        RAISE EXCEPTION 'Ошибка при получении списка заказов: %', SQLERRM; --Этот оператор выводит сообщение об ошибке с информацией о причине ошибки
END;
$$;

Этот код создает функцию на языке PL/pgSQL для получения списка заказов по заданной культуре (p_crop_id).
Таким образом, данная функция возвращает список заказов по заданной культуре, и в случае возникновения ошибки выдает сообщение об ошибке.
